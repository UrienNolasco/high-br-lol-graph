version: '3.8'

networks:
  lol-stats-network:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: high-br-lol-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lol-stats-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: high-br-lol-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - lol-stats-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', '-q', 'check_running']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: high-br-lol-api
    command: npm run start:dev
    environment:
      - APP_MODE=API
      - POSTGRES_HOST=${POSTGRES_HOST} # <-- MODIFICADO
      - POSTGRES_PORT=${POSTGRES_PORT} # <-- MODIFICADO
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - RABBITMQ_HOST=${RABBITMQ_HOST} # <-- MODIFICADO
      - RIOT_API_KEY=${RIOT_API_KEY}
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - lol-stats-network
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: high-br-lol-worker
    command: npm run start:dev
    environment:
      - APP_MODE=WORKER
      - POSTGRES_HOST=${POSTGRES_HOST} # <-- MODIFICADO
      - POSTGRES_PORT=${POSTGRES_PORT} # <-- MODIFICADO
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - RABBITMQ_HOST=${RABBITMQ_HOST} # <-- MODIFICADO
      - RIOT_API_KEY=${RIOT_API_KEY}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - lol-stats-network
    restart: unless-stopped

  collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: high-br-lol-collector
    command: npm run start:dev
    environment:
      - APP_MODE=COLLECTOR
      - POSTGRES_HOST=${POSTGRES_HOST} # <-- MODIFICADO
      - POSTGRES_PORT=${POSTGRES_PORT} # <-- MODIFICADO
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - RABBITMQ_HOST=${RABBITMQ_HOST} # <-- MODIFICADO
      - RIOT_API_KEY=${RIOT_API_KEY}
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - lol-stats-network

volumes:
  postgres_data:
    driver: local
