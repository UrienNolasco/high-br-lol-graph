version: '3.8'

networks:
  lol-stats-network:
    driver: bridge 

# ----------------- DEFINIÇÃO DOS SERVIÇOS -----------------
services:

  # --- BANCO DE DADOS ---
  postgres:
    image: postgres:15-alpine
    container_name: high-br-lol-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: 
      - lol-stats-network
    restart: unless-stopped

  # --- FILA DE MENSAGENS ---
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: high-br-lol-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks: 
      - lol-stats-network
    restart: unless-stopped

  # --- SERVIÇOS DA APLICAÇÃO ---
  
  # Serviço da API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: high-br-lol-api
    command: npm run start:dev
    environment:
      - APP_MODE=API
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - RABBITMQ_HOST=rabbitmq
      - RIOT_API_KEY=${RIOT_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
    networks: 
      - lol-stats-network
    restart: unless-stopped

  # Serviço do Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: high-br-lol-worker
    command: npm run start:dev
    environment:
      - APP_MODE=WORKER
      - POSTGRES_HOST=postgres

    depends_on:
      - postgres
      - rabbitmq
    networks: 
      - lol-stats-network
    restart: unless-stopped

  # Serviço do Coletor
  collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: high-br-lol-collector
    command: npm run start:dev
    environment:
      - APP_MODE=COLLECTOR
      - RABBITMQ_HOST=rabbitmq
      - RIOT_API_KEY=${RIOT_API_KEY}
      - POSTGRES_HOST=postgres
      # ... (demais variáveis de ambiente)
    depends_on:
      - postgres
      - rabbitmq
    networks: 
      - lol-stats-network

# --- VOLUMES ---
volumes:
  postgres_data:
    driver: local